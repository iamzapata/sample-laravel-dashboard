{"version":3,"sources":["utils.js","views.js","router.js","admin.js"],"names":[],"mappingsjfhUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"admin.js","sourcesContent":["/**\n * Get partial views from server.\n */\nvar DashboardPartial = (function(){\n\n    var _getPartialView = function () {\n\n        return $.ajax({\n            url: _url,\n            async: true,\n        });\n\n    };\n\n    return  {\n        get: function (url) {\n            _url = url;\n            return _getPartialView();\n        }\n\n    };\n\n}());\n\n\n/**\n * Display errors.\n */\nvar serverError = (function (response) {\n\n    var defaultMessage = 'There seems to be a problem with the server,' +\n        'please try again or contact support if problem persists.';\n\n    var message = response.responseJSON.error || defaultMessage;\n\n    return swal({title: \"Whoops!\",\n            text: message,\n            type: \"error\",\n            confirmButtonColor: \"#DA4453\",\n            confirmButtonText: \"Ok\"},\n        function(){\n            window.location.href = '/dashboard';\n        });\n\n});","/**\n * Parent View\n *\n * All other views render inside this container.\n */\nvar ContainerView = Backbone.View.extend({\n\n    // Container for dashboard partials.\n    ChildView: null,\n\n    render: function() {\n        if(this.ChildView) {\n            this.$el.html(this.ChildView.$el);\n            this.ChildView.delegateEvents();\n            return this;\n        }\n    }\n});\n\n/**\n * Return admin accounts view.\n */\nvar AdminAccountsView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route; // eg. /admin/dashboard/accounts.\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return application's users view.\n */\nvar UsersView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return system notifications view.\n */\nvar SystemNotificationsView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return users subscription plans view.\n */\nvar PlansView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return plant library view.\n */\nvar PlantLibraryView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return culinary plants library.\n */\nvar CulinaryPlantLibraryView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return pest library view.\n */\nvar PestLibraryView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return procedure library view.\n */\nvar ProcedureLibraryView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return website pages view.\n */\nvar WebsitePagesView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return categories view.\n */\nvar CategoriesView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return journal entries view.\n */\nvar JournalView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return glossary words view.\n */\nvar GlossaryView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return links\n */\nvar LinksView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return user's suggestions messages view.\n */\nvar UserSuggestionsView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return what's this messages view.\n */\nvar WhatsThisView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return general messages out.\n */\nvar GeneralMessagesView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return payment api settings view.\n */\nvar PaymentConnectorView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return outbound api's connections settings view.\n */\nvar ApisConnectionView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return admin dashboard profile view.\n */\nvar AdminProfileView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});\n\n/**\n * Return admin dashboard settings view.\n */\nvar AdminDashboardSettingsView = Backbone.View.extend({\n\n    initialize: function(ob) {\n        var url = ob.route;\n        this.render(url);\n    },\n\n    render: function(url) {\n        var self = this;\n\n        DashboardPartial.get(url).done(function(partial){\n            self.$el.html(partial);\n\n        }).error(function(partial) {\n            serverError();\n        });\n\n        return self;\n    }\n});","/* resources/src/routers/app-router.js */\n\n/**\n * Application Main Router\n */\nvar Router = Backbone.Router.extend({\n\n    // Base url for backend service.\n    baseUrl: '/admin/dashboard/',\n\n    // Parent container\n    container: null,\n\n    // Child views containers\n    accountsView: null,\n    usersView: null,\n    systemNotificationsView: null,\n    plansView: null,\n    plantLibraryView: null,\n    culinaryPlantLibraryView: null,\n    procedureLibraryView: null,\n    pestLibraryView: null,\n    websitePagesView: null,\n    categoriesView: null,\n    journalView: null,\n    glossaryView: null,\n    linksView: null,\n    userSuggestionsView: null,\n    whatsThisView: null,\n    generalMessagesView: null,\n    paymentConnectionView: null,\n    apisConnectionView: null,\n    adminProfileView: null,\n    adminDashboardSettingsView: null,\n\n    initialize: function() {\n        this.bindGlobalEvents(); // All admin dashboard bindings should go here.\n        this.container = new ContainerView({ el: CONTAINER_ELEMENT }); // Create view parent container.\n    },\n\n    // Definition of global event bindings.\n    bindGlobalEvents: function() {\n        $('body').on('click', '.menu-toggle.sidebar-close', this.bindSidebarClose);\n        $('body').on('click', '.menu-toggle.sidebar-open', this.bindSidebarOpen);\n        $('body').on('click', '.sidebar-nav li', this.bindSidebarItems);\n    },\n\n    // Application routes.\n    routes: {\n        \"accounts\": \"showAccounts\",\n        \"users\": \"showUsers\",\n        \"system-notifications\": \"showSystemNotifications\",\n        \"plans\": \"showPlans\",\n        \"plant-library\": \"showPlantLibrary\",\n        \"culinary-plant-library\": \"showCulinaryPlantLibrary\",\n        \"pest-library\": \"showPestLibrary\",\n        \"procedure-library\": \"showProcedureLibrary\",\n        \"website-pages\": \"showWebsitePages\",\n        \"categories\": \"showCategories\",\n        \"journal\": \"showJournal\",\n        \"glossary\": \"showGlossary\",\n        \"links\": \"showLinks\",\n        \"user-suggestions\": \"showUserSuggestions\",\n        \"whats-this\": \"showWhatsThis\",\n        \"general-messages\": \"showGeneralMessages\",\n        \"payment-connection\": \"showPaymentConnector\",\n        \"apis-connection\": \"showApisConnection\",\n        \"profile\": \"showProfile\",\n        \"settings\": \"showSettings\"\n\n    },\n\n    /**\n     * Admin user accounts\n     */\n    showAccounts: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.accountsView = new AdminAccountsView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.accountsView;\n        this.container.render();\n    },\n\n    /**\n     * Application users list.\n     */\n    showUsers: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.usersView = new UsersView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.usersView;\n        this.container.render();\n    },\n\n\n    /**\n     * System notifications\n     */\n    showSystemNotifications: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.systemNotificationsView = new SystemNotificationsView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.systemNotificationsView;\n        this.container.render();\n    },\n\n    /**\n     * User subscription plans\n     */\n    showPlans: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.plansView = new PlansView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.plansView;\n        this.container.render();\n    },\n\n    /**\n     * Plant library.\n     */\n    showPlantLibrary: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.plantLibraryView = new PlantLibraryView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.plantLibraryView;\n        this.container.render();\n    },\n\n    /**\n     * Culinary plant library\n     */\n    showCulinaryPlantLibrary: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.culinaryPlantLibraryView = new CulinaryPlantLibraryView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.culinaryPlantLibraryView;\n        this.container.render();\n    },\n\n    /**\n     * Pest library\n     */\n    showPestLibrary: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.pestLibraryView = new PestLibraryView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.pestLibraryView;\n        this.container.render();\n    },\n\n    /**\n     * Procedure library\n     */\n    showProcedureLibrary: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.procedureLibraryView = new ProcedureLibraryView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.procedureLibraryView;\n        this.container.render();\n    },\n\n    /**\n     * Webiste pages\n     */\n    showWebsitePages: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.websitePagesView = new WebsitePagesView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.websitePagesView;\n        this.container.render();\n    },\n\n    /**\n     * Categories\n     */\n    showCategories: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.categoriesView = new CategoriesView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.categoriesView;\n        this.container.render();\n    },\n\n    /**\n     * Journal\n     */\n    showJournal: function () {\n        var url = Backbone.history.location.hash.substr(1);\n        this.journalView = new JournalView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.journalView;\n        this.container.render();\n    },\n\n    /**\n     * Glossary\n     */\n    showGlossary: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.glossaryView = new GlossaryView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.glossaryView;\n        this.container.render();\n    },\n\n    /**\n     * Links\n     */\n    showLinks: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.linksView = new LinksView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.linksView;\n        this.container.render();\n    },\n\n    /**\n     * User Suggestions\n     */\n    showUserSuggestions: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.userSuggestionsView = new UserSuggestionsView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.userSuggestionsView;\n        this.container.render();\n    },\n\n    /**\n     * What's this\n     */\n    showWhatsThis: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.whatsThisView = new WhatsThisView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.whatsThisView;\n        this.container.render();\n    },\n\n    /**\n     * General messages out.\n     */\n    showGeneralMessages: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.generalMessagesView = new GeneralMessagesView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.generalMessagesView;\n        this.container.render();\n    },\n\n    /**\n     * Payment connection api\n     */\n    showPaymentConnector: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.paymentConnectionView = new PaymentConnectorView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.paymentConnectionView;\n        this.container.render();\n    },\n\n    /**\n     * Outbound api's connection\n     */\n    showApisConnection: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.apisConnectionView = new ApisConnectionView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.apisConnectionView;\n        this.container.render();\n    },\n\n    /**\n     * Admin profile\n     */\n    showAdminProfile: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.adminProfileView = new AdminProfileView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.adminProfileView;\n        this.container.render();\n    },\n\n    /**\n     * Admin dashboard settings\n     */\n    showAdminDashboardSettings: function () {\n        var url = Backbone.history.location.hash.substr(1); // url part after hash e.g #accounts\n        this.adminDashboardSettingsView = new AdminDashboardSettingsView({ route: this.baseUrl + url });\n\n        this.container.ChildView = this.adminDashboardSettingsView;\n        this.container.render();\n    },\n\n    /*****************************\n     * Definition of global events\n     ******************************/\n\n    // Hide left arrow/ Show right arrow\n    bindSidebarClose: function(e) {\n        e.preventDefault();\n        $(\"#menu-sidebar\").hide();\n        $(this).hide();\n        $(\".sidebar-open\").show();\n    },\n\n    // Hide right arrow/ Show left arrow\n    bindSidebarOpen: function (e) {\n        e.preventDefault();\n        $(\"#menu-sidebar\").show();\n        $(this).hide();\n        $(\".sidebar-close\").show();\n    },\n\n    // Add active class to selected menu item.\n    bindSidebarItems: function(e) {\n        $(\".sidebar-nav li\").removeClass('sidebar-menu-item-active')\n        $(this).addClass('sidebar-menu-item-active');\n    }\n\n});\n","\n(function(exports, $){\n\n    //document ready\n    $(function(){\n\n        /**\n         *\n         * Globals\n\n         */\n\n        WINDOW = $(window);\n        DOCUMENT = $(document);\n        BODY   = $('body');\n        CONTAINER_ELEMENT = $(\"#body-container\");\n\n        /**\n         * Initializes de app's Routes Controller.\n         *\n         */\n        AppRouter = new Router();\n\n        /**\n         * Start Backbone url history.\n         *\n         */\n        Backbone.history.start();\n\n    });\n\n}(this, jQuery));"],"sourceRoot":"/source/"}